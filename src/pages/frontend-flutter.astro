---
 import Layout from '../layouts/Layout.astro';
 import Navbar from '../components/Navbar.astro';
---

<Layout>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Fredoka:wght@600&display=swap');

    .page {
      background: #736ff4;
      background-image: url('/images/bg-texture.png');
      background-size: cover;
      background-repeat: no-repeat;
      min-height: 100vh;
      padding: clamp(1rem, 5vw, 2rem);
      color: white;
      font-family: 'Fredoka', sans-serif;
    }

    .header-pill {
      background: #ff4ed8;
      color: yellow;
      font-weight: bold;
      font-size: clamp(1.2rem, 4vw, 1.6rem);
      padding: 0.5rem clamp(1rem, 3vw, 1.5rem);
      border-radius: 2rem;
      display: inline-block;
      transform: rotate(-5deg);
      margin-bottom: 1.5rem;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .tech-badge {
      background: white;
      color: #2a2afc;
      font-weight: bold;
      font-size: clamp(1.1rem, 4vw, 1.5rem);
      padding: 0.8rem clamp(1rem, 3vw, 1.5rem);
      border-radius: 2rem;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      margin-bottom: 2rem;
      box-shadow: 0 4px 10px rgba(0,0,0,0.15);
      flex-wrap: wrap;
      justify-content: center;
    }

    .tech-badge img {
      width: clamp(24px, 6vw, 28px);
      height: auto;
    }

    .content {
      font-size: clamp(1rem, 3vw, 1.2rem);
      color: white;
      font-family: 'Arial', sans-serif;
      line-height: 1.6;
      max-width: 100%;
      margin-bottom: 2rem;
    }

    .ladder-container {
      display: flex;
      flex-direction: column;
      gap: 2rem;
      margin: 2rem 0;
    }

    @media (min-width: 768px) {
      .ladder-container {
        flex-direction: row;
        align-items: flex-start;
      }
      
      .ladder-container:nth-child(odd) {
        flex-direction: row-reverse;
      }
    }

    .ladder-container img {
      width: 100%;
      max-width: 400px;
      margin: 0 auto;
      border-radius: 1rem;
      box-shadow: 0 4px 15px rgba(0,0,0,0.2);
    }

    .ladder {
      display: flex;
      flex-direction: column;
      gap: 0.8rem;
      width: 100%;
    }

    .step, .step2 {
      padding: clamp(0.8rem, 2vw, 1rem);
      border-radius: 8px;
      text-align: left;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      font-weight: 600;
      transition: all 0.3s ease;
      font-size: clamp(0.9rem, 3vw, 1.1rem);
      line-height: 1.5;
    }

    .step {
      background-color: #fff34a;
      color: #000;
    }

    .step2 {
      background-color: #0d89c2;
      color: #ffffff;
    }

    @media (max-width: 767px) {
      .ladder-container {
        flex-direction: column;
      }
      
      .ladder-container img {
        max-width: 100%;
        margin-bottom: 1.5rem;
      }
      
      .step, .step2 {
        width: 100%;
      }
    }

    @media (min-width: 768px) and (max-width: 1023px) {
      .ladder-container {
        flex-wrap: wrap;
      }
      
      .ladder-container > * {
        flex: 1 1 300px;
      }
    }

    @media (hover: hover) and (pointer: fine) {
      .step:hover, .step2:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 15px rgba(0,0,0,0.3);
      }
    }
  </style>

  <section class="page">
    <div class="header-pill">Kodla Kurulan Prefabrik Rüyalar:</div>

    <div class="tech-badge">
      Flutter
    </div>

    <div class="content">
      Bir gün Google dedi ki: "Mobil uygulama geliştirmek neden bu kadar çileli?"
      Android ayrı, iOS ayrı; birine yazsan öbürüne yetişemiyorsun. İşte tam bu sorunla boğuşurken 2017'de sahneye çıktı Flutter.
      Ama sıradan bir "cross-platform" aracı gibi değil adeta kurulum paketiyle gelen bir mimar gibi: Hem boyayı yanında getiriyor (UI bileşenleri), hem çiviyi (widget'lar), hem de iskeleyi (render engine).<br/><br/>
      Flutter'ın arkasında, yıllardır köşede sessizce bekleyen bir kahraman vardı: Dart.
      Google, Dart'ı aslında yıllar önce (2011'de) JavaScript'in tahtına aday yapmak istemişti. Tarayıcıların içini daha düzenli, daha hızlı, daha modern kodla dolduracak bir dildi. Ama olmadı... JavaScript öyle kolay kolay yerini bırakmazdı.<br/><br/>
      Dart biraz yalnız kaldı. Ama Google da Dart'tan vazgeçmedi. Ona yepyeni bir hayat çizdi:
      "Sen JS olamadın ama belki mobil dünyada sahneyi alırsın?"
      Ve işte Flutter böyle doğdu. Dart'a yeni bir beden, Flutter'a ise güçlü bir beyin verdi.

      Flutter + Dart = Tek kod tabanıyla Android, iOS, Web, Masaüstü uygulamaları yazabildiğin geliştirici ütopyası.<br/><br/>
      Bugün Flutter, sadece mobil için değil, neredeyse her platform için yazılım üreten bir çatıya dönüşüyor.
      Kurduğun her şey bir widget. Her ekran, aslında mantıklı yerleştirilmiş minik kutucuklardan oluşuyor.
      Bir nevi kodla kurulan bir LEGO evi gibi. Ne kadar iyi dizersen, o kadar sağlam ve estetik bir yapı çıkıyor.
    </div>
    
    <div class="ladder-container">
      <img src="public/images/flutter-sum.png" alt="Flutter prefabrik yapı metaforu" />
      
      <div class="ladder">
        <div class="step">0. Flutter yapısı: Bir Prefabrik Villanın içine giriyoruz.</div>
        <div class="step">1. Prefabrik villamız: Flutter'ımız.</div>
        <div class="step">2. Her şey parçalardan oluşur. Ama o parçalar neden öyle? Neden o malzeme ile yapılmış?</div>
        <div class="step">3. Widget, Flutter'da her şeyi temsil eden temel yapı taşıdır.</div>
        <div class="step">-- Villa komple bir yapıdır (yani büyük bir widget)</div>
        <div class="step">-- Havuz ise bu villanın içinde yer alan, tek başına bir parça, yani villanın alt parçasıdır. Yani, havuz da bir widget'tır, çünkü villa gibi yapının içindeki bir görsel veya işlevsel bileşendir.</div>
        <div class="step">4. Widget tree -Tüm arsa planı ve yapıların tamamı</div>
      </div>
    </div>

    <div class="ladder-container">
      <div class="ladder">
        <div class="step2">0. <strong>Stateless Widget</strong> - Her zaman aynı....Değişmeyen, durum tutmayan yapı, Kurabiye kalıbı gibi: her seferinde aynı</div>
        <div class="step2">1. <strong>Stateful Widget</strong> - Duruma göre değişir....!İçinde değişen veri tutar, Kurabiyenin süslenmesi gibi: her biri farklı</div>
        <div class="step2">2. <strong>Layout Widget</strong> - Diğer widget'ları düzenler, Tepsi gibi: Row, Column, Stack ile dizer</div>
        <div class="step2">3. Widget Tree, Tüm yapının hiyerarşisi, Kim kimin içinde?</div>
      </div>
      
      <img src="public/images/flutter-kurabiye-kalibi-metaforu.png" alt="Flutter kurabiye kalıbı metaforu" />
    </div>
      

    <div class="content">
      <p><strong> Flutter’ın Felsefesi ve Mimari Yaklaşımlar</strong></p>
      <p>Flutter her şeyi widget olarak tanımlar. Ama bu "her şey widget" yaklaşımı, aslında bir mimariyi dayatmaz. Flutter seni özgür bırakır. Senin düşünme biçine göre mimarini seçmeni ister. Tıpkı boş bir prefabrik arsa gibi: nasıl döşeyeceğin, hangi odaları nereye koyacağın sana kalmış.</p>

      <p><strong>Peki hiç bilmeyen biri için hangi mimariyle başlanmalı?</strong></p>
      <p><mark><strong>1. Basit Mimari (Temiz Kod Temelli):</strong></mark> Stateless ve Stateful widget'lar arasında ayrımı net yaparak, her ekranı tek bir dosyada tutup, küçük küçük bileşenlere ayırarak başlanabilir. Kodlar az, mantık sade.</p>

      <p><mark><strong>2. Feature-based Mimari:</strong></mark> Özellikle projesi büyüyecek olanlar için idealdir. Dosyaları özelliklere göre ayırır: kullanıcı, ürün, yorum gibi. Her özelliğin kendi içinde pages, widgets, models gibi alt klasörleri olur. Anlamlı, sürdürülebilir, modüler.</p>

      <p>Flutter sana bir şey dayatmaz, ama iyi düşünmeni ister. Çünkü bu widget’lardan oluşan ev, nasıl organize edilirse o kadar güçlü ve yönetilebilir olur.</p>

      <p>Yani, Flutter'ın felsefesi şu: “Kuralları sen koy, ama düzenli koy.”</p>
    </div>

     <div class="header-pill">Flutter SDK Kutu Açılımı:</div>

    <div class="tech-badge">
      🍽️ Adım Adım Kurulum
    </div>

    <div class="content">
      Flutter maceramız başlıyor. Önce gidip SDK’mızı indiriyoruz:<br/>
      🔗 <a href="https://flutter.dev" target="_blank">flutter.dev</a><br/><br/>
      Bu SDK, bize temel parçaları getiriyor. Tıpkı bir yemek için malzeme almak gibi.<br/>
      Ardından tarif defterimiz olan IDE’mizi indiriyoruz: Android Studio.<br/>
      <ul>
        <li>🧑‍🍳 <strong>Mac kullanıcıları</strong> ayrıca Xcode da indiriyor.</li>
        <li>🪟 <strong>Windows kullanıcıları</strong> bu adımı atlayabilir, direkt yemeğe (proje kurmaya) geçebilir 😄</li>
      </ul>
      Android Studio üzerinden yeni Flutter projemizi açıyoruz ve kutu açılımına hazır hale geliyoruz!
    </div>

    <div class="tech-badge">
      📦 flutter create benim_projem
    </div>

    <div class="content">
      Flutter SDK’yı kurdun, şimdi IKEA kutusunu açar gibi bir Flutter projesi oluşturuyorsun.<br/>
      <code>flutter create benim_projem</code> komutunu yazdığında, kutudan bazı temel parçalar çıkar.<br/><br/>
      Ama bunlar sadece dosya değil, her biri Flutter evinin içindeki görevli gibi çalışır.
    </div>

    <div class="ladder-container">
      <img src="/images/flutter-kutu-acilimi.png" alt="Flutter kutu içeriği" />
      <div class="ladder">
        <div class="step">1. <code>main.dart</code>: Kurulum Kılavuzu 📘 – Uygulamanın başladığı yer. Tıpkı 'önce A parçasını B’ye takın' diyen ilk sayfa gibi.</div>
        <div class="step">2. <code>pubspec.yaml</code>: Garanti Belgesi & İçindekiler 📋 – Projende hangi parçalar (kütüphaneler) var, burada yazıyor.</div>
        <div class="step">3. <code>lib/</code> klasörü: Kurulumu yapacağın alan 🛠️ – Asıl kodlar burada yazılır.</div>
        <div class="step">4. <code>test/</code> klasörü: Kurulum sonrası kontrol listesi ✅ – Her şey doğru mu, test burada yapılır.</div>
        <div class="step">5. <code>.dart_tool/</code>, <code>.idea/</code>, <code>build/</code>: Görünmeyen ama gerekli teknik belgeler 📦 – Arkada çalışır, kullanıcıya görünmez ama sistem için şarttır.</div>
      </div>
    </div>

    <div class="content">
      <p>Flutter, sadece bir framework değil; seni düşünen bir mimar gibi, kurulumla birlikte hazır bir yapı da sunar.</p>
      <p>Ve işte bu yapı, kurulduktan sonra çalıştırılır: <code>flutter run</code>.</p>
      <p>O an, Flutter ilk nefesini alır… Ve ekran karşına çıkar: “Flutter Demo Home Page”</p>
      <p>Sonraki bölümde, artık bu yapının anatomisini inceleyeceğiz. Yani widget’ların görevlerini, kim ne işe yarıyor sorularını cevaplayacağız.</p>
    </div>
  </section>
</Layout>